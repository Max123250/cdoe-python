'''
时间限制： 3000MS
内存限制： 589824KB
题目描述：
(注.input()输入函数的括号中不允许添加任何信息)
编程实现：
孙悟空的金箍棒可以变高也可以变矮还可以变出多个金箍棒。
这天孙悟空无聊变出了N个长短不一的金箍棒，这些金箍棒之间相互吵闹，攀比谁高。当孙悟空每次手指其中一个金箍棒时，这个金箍棒高度不变，其他的金箍棒高度都会增加1。只有当所有金箍棒高度都一样时，他们之间才不相互吵闹，也不会再增加高度，保持静止。
分别给定N个金箍棒的初始高度，请你帮助孙悟空计算一下至少手指几次可以让N个金箍棒高度都一样。
例如: 有3个金箍棒，初始高度分别为2，3，4。
第一次手指第三个金箍棒，第三个金箍棒高度不变，第一和第二个金箍棒高度分别增加1，变为3，4，4；
第二次手指第二个金箍棒，第二个金箍棒高度不变，第一和第三个金箍棒高度分别增加1，变为4，4，5；
第三次手指第三个金箍棒，第三个金箍棒高度不变，第一和第二个金箍棒高度分别增加1，变为5，5，5；
这时3个金箍棒的高度都为5，手指3次后金箍棒高度一样。所以至少手指3次才能使金箍棒高度都一样。
输入描述
输入N个非全部相等的正整数（N个数不全部相等，2<N<31），且之间以英文逗号隔开，分别表示N个金箍棒的初始高度
输出描述
输出一个正整数，表示至少手指几次才能使金箍棒高度都一样
样例输入
2,3,4
样例输出
3
提示
评分标准：
20分：能正确输出一组数据；
20分：能正确输出两组数据；
20分：能正确输出三组数据；
20分：能正确输出四组数据。
'''
l = list(eval(input()))
i = 0
while True:
    i += 1
    a = max(l)
    for i in range(len(l)):
        if l[i] != a:
            l[i] += 1
    l_f = l[:1]*len(l)
    if l_f == l:
        break
print(i+1)
"40"
'''
时间限制： 3000MS
内存限制： 589824KB
题目描述：
(注.input()输入函数的括号中不允许添加任何信息)
提示信息：
质数：是一个大于1的自然数，且除了1和它本身外，不能被其他自然数整除的数。最小的质数是2，1不是质数。
大于2的偶数有一个特点，任意一个大于2的偶数可以由一对质数相加得到，但有的偶数不止有一对这样的质数对。
如偶数6，有一对质数相加得6，为（3，3）
如偶数14，有两对质数相加得14，分别是（3，11），（7，7）
编程实现：
给定一个大于2的偶数，在所有满足“任意一个大于2的偶数可以由两个质数相加得到”这个特点的质数对中，找出两个质数差值最小的一对，并将差值输出（差值为大数减小数的值，两个质数相等时差值为0）。
例如：偶数16，满足特点的质数对有（5，11）和（3，13），差值最小的一对是（5，11），11减5，差值为6。
输入描述
输入一个大于2的偶数N
输出描述
输出满足“任意一个大于2的偶数可以由两个质数相加得到”这个特点的所有质数对中，差值最小的那一对的差值
样例输入
16
样例输出
6
提示
评分标准：
10分：能正确输出一组数据；
10分：能正确输出两组数据；
15分：能正确输出三组数据；
15分：能正确输出四组数据。
'''
def fun(a):
    # 检测a是否是质数/合数
    # 返回布偶值True为质数/False为合数
    r = True
    for i in range(2,a):
        if a % i == 0:
            r = False
            break
    return r
n = int(input())
zs_l = []
for i in range(1,n):
    if fun(i):
        zs_l.append(i)
all = []
for i in zs_l:
    for j in zs_l:
        if j+i == n:
            if j > i:
                all.append(j-i)
            else:
                all.append(i-j)
print(min(all))
"50"